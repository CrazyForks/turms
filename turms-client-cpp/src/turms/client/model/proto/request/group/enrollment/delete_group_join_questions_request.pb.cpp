// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: request/group/enrollment/delete_group_join_questions_request.proto
// Protobuf C++ Version: 5.26.1

#include "turms/client/model/proto/request/group/enrollment/delete_group_join_questions_request.pb.h"

#include <algorithm>

#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/io/zero_copy_stream_impl_lite.h"
#include "google/protobuf/wire_format_lite.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace turms {
namespace client {
namespace model {
namespace proto {

inline constexpr DeleteGroupJoinQuestionsRequest::Impl_::Impl_(::_pbi::ConstantInitialized) noexcept
    : question_ids_{},
      _question_ids_cached_byte_size_{0},
      group_id_{::int64_t{0}},
      _cached_size_{0} {
}

template <typename>
PROTOBUF_CONSTEXPR DeleteGroupJoinQuestionsRequest::DeleteGroupJoinQuestionsRequest(
    ::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {
}
struct DeleteGroupJoinQuestionsRequestDefaultTypeInternal {
    PROTOBUF_CONSTEXPR DeleteGroupJoinQuestionsRequestDefaultTypeInternal()
        : _instance(::_pbi::ConstantInitialized{}) {
    }
    ~DeleteGroupJoinQuestionsRequestDefaultTypeInternal() {
    }
    union {
        DeleteGroupJoinQuestionsRequest _instance;
    };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
    DeleteGroupJoinQuestionsRequestDefaultTypeInternal
        _DeleteGroupJoinQuestionsRequest_default_instance_;
}  // namespace proto
}  // namespace model
}  // namespace client
}  // namespace turms
namespace turms {
namespace client {
namespace model {
namespace proto {
// ===================================================================

class DeleteGroupJoinQuestionsRequest::_Internal {
   public:
};

DeleteGroupJoinQuestionsRequest::DeleteGroupJoinQuestionsRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
    SharedCtor(arena);
    // @@protoc_insertion_point(arena_constructor:turms.client.model.proto.DeleteGroupJoinQuestionsRequest)
}
inline PROTOBUF_NDEBUG_INLINE DeleteGroupJoinQuestionsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena,
    const Impl_& from)
    : question_ids_{visibility, arena, from.question_ids_},
      _question_ids_cached_byte_size_{0},
      _cached_size_{0} {
}

DeleteGroupJoinQuestionsRequest::DeleteGroupJoinQuestionsRequest(
    ::google::protobuf::Arena* arena, const DeleteGroupJoinQuestionsRequest& from)
    : ::google::protobuf::MessageLite(arena) {
    DeleteGroupJoinQuestionsRequest* const _this = this;
    (void)_this;
    _internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
    new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
    _impl_.group_id_ = from._impl_.group_id_;

    // @@protoc_insertion_point(copy_constructor:turms.client.model.proto.DeleteGroupJoinQuestionsRequest)
}
inline PROTOBUF_NDEBUG_INLINE DeleteGroupJoinQuestionsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena)
    : question_ids_{visibility, arena},
      _question_ids_cached_byte_size_{0},
      _cached_size_{0} {
}

inline void DeleteGroupJoinQuestionsRequest::SharedCtor(::_pb::Arena* arena) {
    new (&_impl_) Impl_(internal_visibility(), arena);
    _impl_.group_id_ = {};
}
DeleteGroupJoinQuestionsRequest::~DeleteGroupJoinQuestionsRequest() {
    // @@protoc_insertion_point(destructor:turms.client.model.proto.DeleteGroupJoinQuestionsRequest)
    _internal_metadata_.Delete<std::string>();
    SharedDtor();
}
inline void DeleteGroupJoinQuestionsRequest::SharedDtor() {
    ABSL_DCHECK(GetArena() == nullptr);
    _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData* DeleteGroupJoinQuestionsRequest::GetClassData()
    const {
    struct ClassData_ {
        ::google::protobuf::MessageLite::ClassData header;
        char type_name[57];
    };

    PROTOBUF_CONSTINIT static const ClassData_ _data_ = {
        {
            nullptr,  // OnDemandRegisterArenaDtor
            PROTOBUF_FIELD_OFFSET(DeleteGroupJoinQuestionsRequest, _impl_._cached_size_),
            true,
        },
        "turms.client.model.proto.DeleteGroupJoinQuestionsRequest",
    };

    return &_data_.header;
}
PROTOBUF_NOINLINE void DeleteGroupJoinQuestionsRequest::Clear() {
    // @@protoc_insertion_point(message_clear_start:turms.client.model.proto.DeleteGroupJoinQuestionsRequest)
    PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
    ::uint32_t cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    _impl_.question_ids_.Clear();
    _impl_.group_id_ = ::int64_t{0};
    _internal_metadata_.Clear<std::string>();
}

const char* DeleteGroupJoinQuestionsRequest::_InternalParse(const char* ptr,
                                                            ::_pbi::ParseContext* ctx) {
    ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
    return ptr;
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
    DeleteGroupJoinQuestionsRequest::_table_ = {
        {
            0,  // no _has_bits_
            0,  // no _extensions_
            2,
            8,  // max_field_number, fast_idx_mask
            offsetof(decltype(_table_), field_lookup_table),
            4294967292,  // skipmap
            offsetof(decltype(_table_), field_entries),
            2,                                         // num_field_entries
            0,                                         // num_aux_entries
            offsetof(decltype(_table_), field_names),  // no aux_entries
            &_DeleteGroupJoinQuestionsRequest_default_instance_._instance,
            ::_pbi::TcParser::GenericFallbackLite,  // fallback
#ifdef PROTOBUF_PREFETCH_PARSE_TABLE
            ::_pbi::TcParser::GetTable<
                ::turms::client::model::proto::DeleteGroupJoinQuestionsRequest>(),  // to_prefetch
#endif  // PROTOBUF_PREFETCH_PARSE_TABLE
        },
        {{
            // repeated int64 question_ids = 2;
            {::_pbi::TcParser::FastV64P1,
             {18,
              63,
              0,
              PROTOBUF_FIELD_OFFSET(DeleteGroupJoinQuestionsRequest, _impl_.question_ids_)}},
            // int64 group_id = 1;
            {::_pbi::TcParser::FastV64S1,
             {8, 63, 0, PROTOBUF_FIELD_OFFSET(DeleteGroupJoinQuestionsRequest, _impl_.group_id_)}},
        }},
        {{65535, 65535}},
        {{
            // int64 group_id = 1;
            {PROTOBUF_FIELD_OFFSET(DeleteGroupJoinQuestionsRequest, _impl_.group_id_),
             0,
             0,
             (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
            // repeated int64 question_ids = 2;
            {PROTOBUF_FIELD_OFFSET(DeleteGroupJoinQuestionsRequest, _impl_.question_ids_),
             0,
             0,
             (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt64)},
        }},
        // no aux_entries
        {{}},
};

::uint8_t* DeleteGroupJoinQuestionsRequest::_InternalSerialize(
    ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    // @@protoc_insertion_point(serialize_to_array_start:turms.client.model.proto.DeleteGroupJoinQuestionsRequest)
    ::uint32_t cached_has_bits = 0;
    (void)cached_has_bits;

    // int64 group_id = 1;
    if (this->_internal_group_id() != 0) {
        target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<1>(
            stream, this->_internal_group_id(), target);
    }

    // repeated int64 question_ids = 2;
    {
        int byte_size = _impl_._question_ids_cached_byte_size_.Get();
        if (byte_size > 0) {
            target = stream->WriteInt64Packed(2, _internal_question_ids(), byte_size, target);
        }
    }

    if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
        target = stream->WriteRaw(
            _internal_metadata_
                .unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString)
                .data(),
            static_cast<int>(
                _internal_metadata_
                    .unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString)
                    .size()),
            target);
    }
    // @@protoc_insertion_point(serialize_to_array_end:turms.client.model.proto.DeleteGroupJoinQuestionsRequest)
    return target;
}

::size_t DeleteGroupJoinQuestionsRequest::ByteSizeLong() const {
    // @@protoc_insertion_point(message_byte_size_start:turms.client.model.proto.DeleteGroupJoinQuestionsRequest)
    ::size_t total_size = 0;

    ::uint32_t cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    // repeated int64 question_ids = 2;
    {
        std::size_t data_size = ::_pbi::WireFormatLite::Int64Size(this->_internal_question_ids());
        _impl_._question_ids_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
        std::size_t tag_size =
            data_size == 0 ? 0
                           : 1 + ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
        total_size += tag_size + data_size;
    }
    // int64 group_id = 1;
    if (this->_internal_group_id() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_group_id());
    }

    if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
        total_size += _internal_metadata_
                          .unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString)
                          .size();
    }
    _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
    return total_size;
}

void DeleteGroupJoinQuestionsRequest::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
    MergeFrom(*::_pbi::DownCast<const DeleteGroupJoinQuestionsRequest*>(&from));
}

void DeleteGroupJoinQuestionsRequest::MergeFrom(const DeleteGroupJoinQuestionsRequest& from) {
    DeleteGroupJoinQuestionsRequest* const _this = this;
    // @@protoc_insertion_point(class_specific_merge_from_start:turms.client.model.proto.DeleteGroupJoinQuestionsRequest)
    ABSL_DCHECK_NE(&from, _this);
    ::uint32_t cached_has_bits = 0;
    (void)cached_has_bits;

    _this->_internal_mutable_question_ids()->MergeFrom(from._internal_question_ids());
    if (from._internal_group_id() != 0) {
        _this->_impl_.group_id_ = from._impl_.group_id_;
    }
    _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void DeleteGroupJoinQuestionsRequest::CopyFrom(const DeleteGroupJoinQuestionsRequest& from) {
    // @@protoc_insertion_point(class_specific_copy_from_start:turms.client.model.proto.DeleteGroupJoinQuestionsRequest)
    if (&from == this)
        return;
    Clear();
    MergeFrom(from);
}

PROTOBUF_NOINLINE bool DeleteGroupJoinQuestionsRequest::IsInitialized() const {
    return true;
}

void DeleteGroupJoinQuestionsRequest::InternalSwap(
    DeleteGroupJoinQuestionsRequest* PROTOBUF_RESTRICT other) {
    using std::swap;
    _internal_metadata_.InternalSwap(&other->_internal_metadata_);
    _impl_.question_ids_.InternalSwap(&other->_impl_.question_ids_);
    swap(_impl_.group_id_, other->_impl_.group_id_);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace model
}  // namespace client
}  // namespace turms
namespace google {
namespace protobuf {}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"