// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: model/conversation/conversations.proto

#include "turms/client/model/proto/model/conversation/conversations.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/io/zero_copy_stream_impl_lite.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace turms {
namespace client {
namespace model {
namespace proto {
        template <typename>
PROTOBUF_CONSTEXPR Conversations::Conversations(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.private_conversations_)*/ {},
      /*decltype(_impl_.group_conversations_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct ConversationsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConversationsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConversationsDefaultTypeInternal() {}
  union {
    Conversations _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConversationsDefaultTypeInternal _Conversations_default_instance_;
}  // namespace proto
}  // namespace model
}  // namespace client
}  // namespace turms
namespace turms {
namespace client {
namespace model {
namespace proto {
// ===================================================================

class Conversations::_Internal {
 public:
};

void Conversations::clear_private_conversations() {
  _internal_mutable_private_conversations()->Clear();
}
void Conversations::clear_group_conversations() {
  _internal_mutable_group_conversations()->Clear();
}
Conversations::Conversations(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:turms.client.model.proto.Conversations)
}
Conversations::Conversations(const Conversations& from) : ::google::protobuf::MessageLite() {
  Conversations* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.private_conversations_){from._impl_.private_conversations_},
      decltype(_impl_.group_conversations_){from._impl_.group_conversations_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:turms.client.model.proto.Conversations)
}
inline void Conversations::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.private_conversations_){arena},
      decltype(_impl_.group_conversations_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
Conversations::~Conversations() {
  // @@protoc_insertion_point(destructor:turms.client.model.proto.Conversations)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void Conversations::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.private_conversations_.~RepeatedPtrField();
  _impl_.group_conversations_.~RepeatedPtrField();
}
void Conversations::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void Conversations::Clear() {
// @@protoc_insertion_point(message_clear_start:turms.client.model.proto.Conversations)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_private_conversations()->Clear();
  _internal_mutable_group_conversations()->Clear();
  _internal_metadata_.Clear<std::string>();
}

const char* Conversations::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> Conversations::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Conversations_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    // repeated .turms.client.model.proto.GroupConversation group_conversations = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(Conversations, _impl_.group_conversations_)}},
    // repeated .turms.client.model.proto.PrivateConversation private_conversations = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Conversations, _impl_.private_conversations_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .turms.client.model.proto.PrivateConversation private_conversations = 1;
    {PROTOBUF_FIELD_OFFSET(Conversations, _impl_.private_conversations_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .turms.client.model.proto.GroupConversation group_conversations = 2;
    {PROTOBUF_FIELD_OFFSET(Conversations, _impl_.group_conversations_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::turms::client::model::proto::PrivateConversation>()},
    {::_pbi::TcParser::GetTable<::turms::client::model::proto::GroupConversation>()},
  }}, {{
  }},
};

::uint8_t* Conversations::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:turms.client.model.proto.Conversations)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .turms.client.model.proto.PrivateConversation private_conversations = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_private_conversations_size()); i < n; i++) {
    const auto& repfield = this->_internal_private_conversations().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .turms.client.model.proto.GroupConversation group_conversations = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_group_conversations_size()); i < n; i++) {
    const auto& repfield = this->_internal_group_conversations().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:turms.client.model.proto.Conversations)
  return target;
}

::size_t Conversations::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:turms.client.model.proto.Conversations)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .turms.client.model.proto.PrivateConversation private_conversations = 1;
  total_size += 1UL * this->_internal_private_conversations_size();
  for (const auto& msg : this->_internal_private_conversations()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .turms.client.model.proto.GroupConversation group_conversations = 2;
  total_size += 1UL * this->_internal_group_conversations_size();
  for (const auto& msg : this->_internal_group_conversations()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  int cached_size = ::_pbi::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Conversations::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const Conversations*>(
      &from));
}

void Conversations::MergeFrom(const Conversations& from) {
  Conversations* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:turms.client.model.proto.Conversations)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_private_conversations()->MergeFrom(from._internal_private_conversations());
  _this->_internal_mutable_group_conversations()->MergeFrom(from._internal_group_conversations());
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void Conversations::CopyFrom(const Conversations& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:turms.client.model.proto.Conversations)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Conversations::IsInitialized() const {
  return true;
}

void Conversations::InternalSwap(Conversations* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.private_conversations_.InternalSwap(&other->_impl_.private_conversations_);
  _impl_.group_conversations_.InternalSwap(&other->_impl_.group_conversations_);
}

std::string Conversations::GetTypeName() const {
  return "turms.client.model.proto.Conversations";
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace model
}  // namespace client
}  // namespace turms
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
