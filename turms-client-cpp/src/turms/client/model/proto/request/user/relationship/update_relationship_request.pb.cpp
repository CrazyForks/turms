// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: request/user/relationship/update_relationship_request.proto
// Protobuf C++ Version: 5.26.1

#include "turms/client/model/proto/request/user/relationship/update_relationship_request.pb.h"

#include <algorithm>

#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/io/zero_copy_stream_impl_lite.h"
#include "google/protobuf/wire_format_lite.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace turms {
namespace client {
namespace model {
namespace proto {

inline constexpr UpdateRelationshipRequest::Impl_::Impl_(::_pbi::ConstantInitialized) noexcept
    : _cached_size_{0},
      name_(&::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
      user_id_{::int64_t{0}},
      blocked_{false},
      new_group_index_{0},
      delete_group_index_{0} {
}

template <typename>
PROTOBUF_CONSTEXPR UpdateRelationshipRequest::UpdateRelationshipRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {
}
struct UpdateRelationshipRequestDefaultTypeInternal {
    PROTOBUF_CONSTEXPR UpdateRelationshipRequestDefaultTypeInternal()
        : _instance(::_pbi::ConstantInitialized{}) {
    }
    ~UpdateRelationshipRequestDefaultTypeInternal() {
    }
    union {
        UpdateRelationshipRequest _instance;
    };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
    UpdateRelationshipRequestDefaultTypeInternal _UpdateRelationshipRequest_default_instance_;
}  // namespace proto
}  // namespace model
}  // namespace client
}  // namespace turms
namespace turms {
namespace client {
namespace model {
namespace proto {
// ===================================================================

class UpdateRelationshipRequest::_Internal {
   public:
    using HasBits = decltype(std::declval<UpdateRelationshipRequest>()._impl_._has_bits_);
    static constexpr ::int32_t kHasBitsOffset =
        8 * PROTOBUF_FIELD_OFFSET(UpdateRelationshipRequest, _impl_._has_bits_);
};

UpdateRelationshipRequest::UpdateRelationshipRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
    SharedCtor(arena);
    // @@protoc_insertion_point(arena_constructor:turms.client.model.proto.UpdateRelationshipRequest)
}
inline PROTOBUF_NDEBUG_INLINE UpdateRelationshipRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena,
    const Impl_& from)
    : _has_bits_{from._has_bits_},
      _cached_size_{0},
      name_(arena, from.name_) {
}

UpdateRelationshipRequest::UpdateRelationshipRequest(::google::protobuf::Arena* arena,
                                                     const UpdateRelationshipRequest& from)
    : ::google::protobuf::MessageLite(arena) {
    UpdateRelationshipRequest* const _this = this;
    (void)_this;
    _internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
    new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
    ::memcpy(reinterpret_cast<char*>(&_impl_) + offsetof(Impl_, user_id_),
             reinterpret_cast<const char*>(&from._impl_) + offsetof(Impl_, user_id_),
             offsetof(Impl_, delete_group_index_) - offsetof(Impl_, user_id_) +
                 sizeof(Impl_::delete_group_index_));

    // @@protoc_insertion_point(copy_constructor:turms.client.model.proto.UpdateRelationshipRequest)
}
inline PROTOBUF_NDEBUG_INLINE UpdateRelationshipRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena)
    : _cached_size_{0},
      name_(arena) {
}

inline void UpdateRelationshipRequest::SharedCtor(::_pb::Arena* arena) {
    new (&_impl_) Impl_(internal_visibility(), arena);
    ::memset(reinterpret_cast<char*>(&_impl_) + offsetof(Impl_, user_id_),
             0,
             offsetof(Impl_, delete_group_index_) - offsetof(Impl_, user_id_) +
                 sizeof(Impl_::delete_group_index_));
}
UpdateRelationshipRequest::~UpdateRelationshipRequest() {
    // @@protoc_insertion_point(destructor:turms.client.model.proto.UpdateRelationshipRequest)
    _internal_metadata_.Delete<std::string>();
    SharedDtor();
}
inline void UpdateRelationshipRequest::SharedDtor() {
    ABSL_DCHECK(GetArena() == nullptr);
    _impl_.name_.Destroy();
    _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData* UpdateRelationshipRequest::GetClassData() const {
    struct ClassData_ {
        ::google::protobuf::MessageLite::ClassData header;
        char type_name[51];
    };

    PROTOBUF_CONSTINIT static const ClassData_ _data_ = {
        {
            nullptr,  // OnDemandRegisterArenaDtor
            PROTOBUF_FIELD_OFFSET(UpdateRelationshipRequest, _impl_._cached_size_),
            true,
        },
        "turms.client.model.proto.UpdateRelationshipRequest",
    };

    return &_data_.header;
}
PROTOBUF_NOINLINE void UpdateRelationshipRequest::Clear() {
    // @@protoc_insertion_point(message_clear_start:turms.client.model.proto.UpdateRelationshipRequest)
    PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
    ::uint32_t cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    cached_has_bits = _impl_._has_bits_[0];
    if (cached_has_bits & 0x00000001u) {
        _impl_.name_.ClearNonDefaultToEmpty();
    }
    _impl_.user_id_ = ::int64_t{0};
    if (cached_has_bits & 0x0000000eu) {
        ::memset(&_impl_.blocked_,
                 0,
                 static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.delete_group_index_) -
                                       reinterpret_cast<char*>(&_impl_.blocked_)) +
                     sizeof(_impl_.delete_group_index_));
    }
    _impl_._has_bits_.Clear();
    _internal_metadata_.Clear<std::string>();
}

const char* UpdateRelationshipRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
    ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
    return ptr;
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::_pbi::TcParseTable<3, 5, 0, 63, 2>
    UpdateRelationshipRequest::_table_ = {
        {
            PROTOBUF_FIELD_OFFSET(UpdateRelationshipRequest, _impl_._has_bits_),
            0,  // no _extensions_
            5,
            56,  // max_field_number, fast_idx_mask
            offsetof(decltype(_table_), field_lookup_table),
            4294967264,  // skipmap
            offsetof(decltype(_table_), field_entries),
            5,                                         // num_field_entries
            0,                                         // num_aux_entries
            offsetof(decltype(_table_), field_names),  // no aux_entries
            &_UpdateRelationshipRequest_default_instance_._instance,
            ::_pbi::TcParser::GenericFallbackLite,  // fallback
#ifdef PROTOBUF_PREFETCH_PARSE_TABLE
            ::_pbi::TcParser::GetTable<
                ::turms::client::model::proto::UpdateRelationshipRequest>(),  // to_prefetch
#endif  // PROTOBUF_PREFETCH_PARSE_TABLE
        },
        {{
            {::_pbi::TcParser::MiniParse, {}},
            // int64 user_id = 1;
            {::_pbi::TcParser::FastV64S1,
             {8, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateRelationshipRequest, _impl_.user_id_)}},
            // optional bool blocked = 2;
            {::_pbi::TcParser::FastV8S1,
             {16, 1, 0, PROTOBUF_FIELD_OFFSET(UpdateRelationshipRequest, _impl_.blocked_)}},
            // optional int32 new_group_index = 3;
            {::_pbi::TcParser::FastV32S1,
             {24, 2, 0, PROTOBUF_FIELD_OFFSET(UpdateRelationshipRequest, _impl_.new_group_index_)}},
            // optional int32 delete_group_index = 4;
            {::_pbi::TcParser::FastV32S1,
             {32,
              3,
              0,
              PROTOBUF_FIELD_OFFSET(UpdateRelationshipRequest, _impl_.delete_group_index_)}},
            // optional string name = 5;
            {::_pbi::TcParser::FastUS1,
             {42, 0, 0, PROTOBUF_FIELD_OFFSET(UpdateRelationshipRequest, _impl_.name_)}},
            {::_pbi::TcParser::MiniParse, {}},
            {::_pbi::TcParser::MiniParse, {}},
        }},
        {{65535, 65535}},
        {{
            // int64 user_id = 1;
            {PROTOBUF_FIELD_OFFSET(UpdateRelationshipRequest, _impl_.user_id_),
             -1,
             0,
             (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
            // optional bool blocked = 2;
            {PROTOBUF_FIELD_OFFSET(UpdateRelationshipRequest, _impl_.blocked_),
             _Internal::kHasBitsOffset + 1,
             0,
             (0 | ::_fl::kFcOptional | ::_fl::kBool)},
            // optional int32 new_group_index = 3;
            {PROTOBUF_FIELD_OFFSET(UpdateRelationshipRequest, _impl_.new_group_index_),
             _Internal::kHasBitsOffset + 2,
             0,
             (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
            // optional int32 delete_group_index = 4;
            {PROTOBUF_FIELD_OFFSET(UpdateRelationshipRequest, _impl_.delete_group_index_),
             _Internal::kHasBitsOffset + 3,
             0,
             (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
            // optional string name = 5;
            {PROTOBUF_FIELD_OFFSET(UpdateRelationshipRequest, _impl_.name_),
             _Internal::kHasBitsOffset + 0,
             0,
             (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
        }},
        // no aux_entries
        {{"\62\0\0\0\0\4\0\0"
          "turms.client.model.proto.UpdateRelationshipRequest"
          "name"}},
};

::uint8_t* UpdateRelationshipRequest::_InternalSerialize(
    ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    // @@protoc_insertion_point(serialize_to_array_start:turms.client.model.proto.UpdateRelationshipRequest)
    ::uint32_t cached_has_bits = 0;
    (void)cached_has_bits;

    // int64 user_id = 1;
    if (this->_internal_user_id() != 0) {
        target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<1>(
            stream, this->_internal_user_id(), target);
    }

    cached_has_bits = _impl_._has_bits_[0];
    // optional bool blocked = 2;
    if (cached_has_bits & 0x00000002u) {
        target = stream->EnsureSpace(target);
        target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_blocked(), target);
    }

    // optional int32 new_group_index = 3;
    if (cached_has_bits & 0x00000004u) {
        target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
            stream, this->_internal_new_group_index(), target);
    }

    // optional int32 delete_group_index = 4;
    if (cached_has_bits & 0x00000008u) {
        target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<4>(
            stream, this->_internal_delete_group_index(), target);
    }

    // optional string name = 5;
    if (cached_has_bits & 0x00000001u) {
        const std::string& _s = this->_internal_name();
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            _s.data(),
            static_cast<int>(_s.length()),
            ::google::protobuf::internal::WireFormatLite::SERIALIZE,
            "turms.client.model.proto.UpdateRelationshipRequest.name");
        target = stream->WriteStringMaybeAliased(5, _s, target);
    }

    if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
        target = stream->WriteRaw(
            _internal_metadata_
                .unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString)
                .data(),
            static_cast<int>(
                _internal_metadata_
                    .unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString)
                    .size()),
            target);
    }
    // @@protoc_insertion_point(serialize_to_array_end:turms.client.model.proto.UpdateRelationshipRequest)
    return target;
}

::size_t UpdateRelationshipRequest::ByteSizeLong() const {
    // @@protoc_insertion_point(message_byte_size_start:turms.client.model.proto.UpdateRelationshipRequest)
    ::size_t total_size = 0;

    ::uint32_t cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    // optional string name = 5;
    cached_has_bits = _impl_._has_bits_[0];
    if (cached_has_bits & 0x00000001u) {
        total_size +=
            1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->_internal_name());
    }

    // int64 user_id = 1;
    if (this->_internal_user_id() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_user_id());
    }

    if (cached_has_bits & 0x0000000eu) {
        // optional bool blocked = 2;
        if (cached_has_bits & 0x00000002u) {
            total_size += 2;
        }

        // optional int32 new_group_index = 3;
        if (cached_has_bits & 0x00000004u) {
            total_size +=
                ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_new_group_index());
        }

        // optional int32 delete_group_index = 4;
        if (cached_has_bits & 0x00000008u) {
            total_size +=
                ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_delete_group_index());
        }
    }
    if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
        total_size += _internal_metadata_
                          .unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString)
                          .size();
    }
    _impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
    return total_size;
}

void UpdateRelationshipRequest::CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from) {
    MergeFrom(*::_pbi::DownCast<const UpdateRelationshipRequest*>(&from));
}

void UpdateRelationshipRequest::MergeFrom(const UpdateRelationshipRequest& from) {
    UpdateRelationshipRequest* const _this = this;
    // @@protoc_insertion_point(class_specific_merge_from_start:turms.client.model.proto.UpdateRelationshipRequest)
    ABSL_DCHECK_NE(&from, _this);
    ::uint32_t cached_has_bits = 0;
    (void)cached_has_bits;

    cached_has_bits = from._impl_._has_bits_[0];
    if (cached_has_bits & 0x00000001u) {
        _this->_internal_set_name(from._internal_name());
    }
    if (from._internal_user_id() != 0) {
        _this->_impl_.user_id_ = from._impl_.user_id_;
    }
    if (cached_has_bits & 0x0000000eu) {
        if (cached_has_bits & 0x00000002u) {
            _this->_impl_.blocked_ = from._impl_.blocked_;
        }
        if (cached_has_bits & 0x00000004u) {
            _this->_impl_.new_group_index_ = from._impl_.new_group_index_;
        }
        if (cached_has_bits & 0x00000008u) {
            _this->_impl_.delete_group_index_ = from._impl_.delete_group_index_;
        }
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
    _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void UpdateRelationshipRequest::CopyFrom(const UpdateRelationshipRequest& from) {
    // @@protoc_insertion_point(class_specific_copy_from_start:turms.client.model.proto.UpdateRelationshipRequest)
    if (&from == this)
        return;
    Clear();
    MergeFrom(from);
}

PROTOBUF_NOINLINE bool UpdateRelationshipRequest::IsInitialized() const {
    return true;
}

void UpdateRelationshipRequest::InternalSwap(UpdateRelationshipRequest* PROTOBUF_RESTRICT other) {
    using std::swap;
    auto* arena = GetArena();
    ABSL_DCHECK_EQ(arena, other->GetArena());
    _internal_metadata_.InternalSwap(&other->_internal_metadata_);
    swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
    ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
    ::google::protobuf::internal::memswap<
        PROTOBUF_FIELD_OFFSET(UpdateRelationshipRequest, _impl_.delete_group_index_) +
        sizeof(UpdateRelationshipRequest::_impl_.delete_group_index_) -
        PROTOBUF_FIELD_OFFSET(UpdateRelationshipRequest, _impl_.user_id_)>(
        reinterpret_cast<char*>(&_impl_.user_id_),
        reinterpret_cast<char*>(&other->_impl_.user_id_));
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace model
}  // namespace client
}  // namespace turms
namespace google {
namespace protobuf {}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"